@use '../core' as *;

/* 按钮组件样式 */
.c-button {
  // 基础样式
  @include button-base;
  
  // 元素
  &__icon {
    margin-right: var(--spacing-xs, $spacing-xs);
    display: inline-flex;
    align-items: center;
  }
  
  &__text {
    line-height: 1.5;
  }
  
  // 修饰符 - 类型
  &--primary {
    background-color: var(--primary-color, $primary-color);
    color: white;
    
    &:hover {
      background-color: var(--primary-color-hover, $primary-color-hover);
    }
    
    &:active {
      opacity: 0.8;
    }
  }
  
  &--secondary {
    background-color: var(--secondary-color, $secondary-color);
    color: white;
    
    &:hover {
      opacity: 0.9;
    }
    
    &:active {
      opacity: 0.8;
    }
  }
  
  &--outline {
    border: 1px solid var(--primary-color, $primary-color);
    color: var(--primary-color, $primary-color);
    background: transparent;
    
    &:hover {
      background-color: var(--primary-bg-color, $primary-bg-color);
    }
    
    &:active {
      opacity: 0.8;
    }
  }
  
  &--text {
    background: transparent;
    color: var(--primary-color, $primary-color);
    
    &:hover {
      background-color: var(--primary-bg-color, $primary-bg-color);
    }
    
    &:active {
      opacity: 0.8;
    }
  }
  
  // 修饰符 - 尺寸
  &--small {
    @include button-size($spacing-xs, $spacing-sm, $font-size-s);
  }
  
  &--medium {
    @include button-size($spacing-sm, $spacing-md, $font-size-m);
  }
  
  &--large {
    @include button-size($spacing-md, $spacing-lg, $font-size-l);
  }
  
  // 修饰符 - 状态
  &--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    pointer-events: none;
  }
  
  &--block {
    display: flex;
    width: 100%;
  }
  
  &--loading {
    position: relative;
    pointer-events: none;
    
    &::before {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      width: 1em;
      height: 1em;
      margin: -0.5em 0 0 -0.5em;
      border: 2px solid currentColor;
      border-top-color: transparent;
      border-radius: 50%;
      animation: button-loading-spinner 0.6s linear infinite;
    }
  }
}

@keyframes button-loading-spinner {
  to {
    transform: rotate(360deg);
  }
}